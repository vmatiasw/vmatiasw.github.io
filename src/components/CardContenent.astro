---
import ItemSkills from "./ItemSkills.astro";
import { Icon } from "astro-icon/components";
import type { Skills } from "../cv-types";
import { Image } from "astro:assets";

export interface Props {
  firstTitle?: string;
  entityTitle?: string;
  entityUrl?: string;
  headerIcons?: { url: string; icon: string; name: string }[] | undefined;
  subtitle?: string;
  summary: string;
  details?: [string, string[]][] | undefined;
  image?: string;
  fancybox?: string;
  skills: Skills;
}

const {
  firstTitle,
  entityTitle,
  entityUrl,
  headerIcons,
  subtitle,
  summary,
  details,
  image,
  fancybox,
  skills,
}: Props = Astro.props;
---

<div class={headerIcons && "flex items-center gap-2 justify-between"}>
  <h3 class="flex-inline text-lg">
    {firstTitle && <span>{firstTitle}</span>}
    {firstTitle && entityTitle && <span class="text-skin-muted"> @ </span>}
    {
      entityTitle &&
        (entityUrl ? (
          <a
            href={entityUrl}
            class="group gap-3 text-skin-hue hover:underline"
            target="_blank"
            rel="noopener noreferrer"
            title={`Visit ${entityTitle}`}
          >
            {entityTitle}
            <Icon
              name="ri:arrow-up-line"
              class="inline size-6 rotate-45 group-hover:-translate-y-0.5 group-hover:translate-x-0.5"
            />
          </a>
        ) : (
          <span>{entityTitle}</span>
        ))
    }
  </h3>
  {
    headerIcons &&
      headerIcons.map(({ url, icon, name }) => (
        <a
          href={url}
          title={name}
          target="_blank"
          rel="noopener"
          class="opacity-75 hover:scale-125 hover:opacity-100"
        >
          <Icon name={icon} class="size-6" />
        </a>
      ))
  }
</div>
{subtitle && <p class="text-xs text-skin-muted">{subtitle}</p>}
<div class="my-4 space-y-2 text-sm">
  <p class="text-skin-muted">{summary}</p>
  {
    details && (
      <details class="group mt-4 space-y-2 text-sm">
        <summary class="flex cursor-pointer gap-1.5 text-xs text-skin-muted underline">
          <Icon
            name="ri:arrow-up-s-line"
            class="size-4 duration-200 group-open:rotate-180"
          />
          <span class="group-open:hidden">Show more</span>
          <span class="hidden group-open:block">Show less</span>
        </summary>
        {details.map(([key, value]) => (
          <div>
            <h4>{key}:</h4>
            <ul class="flex list-disc flex-col gap-2 text-skin-muted">
              {value.map((item) => (
                <li class="ml-4 marker:text-skin-hue">{item}</li>
              ))}
            </ul>
          </div>
        ))}
      </details>
    )
  }
</div>
{
  image && (
    <a data-src={image} data-fancybox={fancybox}>
      <Image
        src={image}
        alt=""
        width={800}
        height={1080}
        class="mt-3 max-w-full rounded-lg"
      />
    </a>
  )
}
<ItemSkills skills={skills} />
