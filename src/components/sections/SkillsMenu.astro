---
import AcordionSection from "../AcordionSection.astro";
import CV from "@cv";
import { Icon } from "astro-icon/components";
import { getclassId } from "../../classes-generator";

const { skills } = CV;
---

<AcordionSection className={Astro.props.className} title="Skills">
  <ul
    class="inline-flex flex-wrap gap-4 print:mt-4 [&>li>svg]:text-skin-hue [&>li]:text-sm"
  >
    {
      skills.languages?.map((language) => {
        const { name, icon } = language;
        return (
          <li>
            <input
              type="checkbox"
              id={getclassId("languages", name)}
              value={name}
              class="skill-checkbox hidden"
              checked
            />
            <label
              for={getclassId("languages", name)}
              class="flex cursor-pointer items-center gap-1 rounded-md border border-solid border-skin-hue/20 bg-skin-button-accent/20 px-1 py-0.5 text-xs text-skin-hue print:border-none print:bg-transparent print:p-0 print:text-zinc-800"
            >
              {icon && <Icon name={icon} width={16} height={16} />}
              <span>{name}</span>
            </label>
          </li>
        );
      })
    }
  </ul>
  <button id="apply-filter-btn" class="button-hover-effect mt-4">
    Filter
  </button>
</AcordionSection>

<script>
  import { SKILL_FILTER_CLASS } from "../../classes-generator";

  document.addEventListener("DOMContentLoaded", () => {
    const checkboxes = document.querySelectorAll(
      ".skill-checkbox",
    ) as NodeListOf<HTMLInputElement>;
    const filterBtn = document.querySelector("#apply-filter-btn");

    filterBtn?.addEventListener("click", () => {
      const selectedSkills: Set<string> = new Set();
      checkboxes.forEach((checkbox) => {
        if (checkbox.checked) {
          selectedSkills.add(checkbox.id);
        }
      });

      const elementsToHide =
        document.getElementsByClassName(SKILL_FILTER_CLASS);
      Array.from(elementsToHide).forEach((element) => {
        (element as HTMLElement).style.display = "none";
      });

      selectedSkills.forEach((skill) => {
        const elementsToShow = document.getElementsByClassName(skill);
        Array.from(elementsToShow).forEach((element) => {
          (element as HTMLElement).style.display = "block";
        });
      });
    });
  });
</script>

<style>
  .skill-checkbox:not(:checked) + label {
    background-color: transparent;
  }
</style>
