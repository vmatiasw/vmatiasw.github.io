---
import Section from "../Section.astro";
import { CV } from "../../CVRepository";
import SkillsList from "../SkillsList.astro";
import { Icon } from "astro-icon/components";

const { skills } = CV;
---

<Section className={Astro.props.className} title="Skills">
  <div class="flex flex-col gap-4">
    <div>
      <SkillsList
        title="Tools"
        type="tools"
        items={skills.tools || []}
        input={true}
      />
    </div>
    <div>
      <SkillsList
        title="Languages"
        type="languages"
        items={skills.languages || []}
        input={true}
      />
    </div>
    <div>
      <h2 class="section-title2">Technologies</h2>
      {
        skills.languages!.map((language) => {
          const tech = language.technologies;
          return tech ? (
            <SkillsList
              groupBy={language.name}
              type="languages"
              items={tech}
              input={true}
            />
          ) : null;
        })
      }
    </div>
    <div class="mt-4 flex gap-4">
      <label>
        <input
          type="checkbox"
          id="skills-filter-checkbox"
          style="display: none;"
        />
        <span class="button-hover-effect skills-menu-button">
          <Icon name="mdi:filter" width={16} height={16} />
          Filter
        </span>
      </label>
      <button
        id="skills-check-all-btn"
        class="button-hover-effect skills-menu-button"
        aria-label="Select all skills"
      >
        Select All
      </button>
      <button
        id="skills-uncheck-all-btn"
        class="button-hover-effect skills-menu-button"
        aria-label="Deselect all skills"
      >
        Deselect All
      </button>
    </div>
  </div>
</Section>

<style>
  .skills-menu-button {
    box-shadow: 0 0 4px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkAllBtn = document.getElementById(
      "skills-check-all-btn",
    ) as HTMLButtonElement;
    const uncheckAllBtn = document.getElementById(
      "skills-uncheck-all-btn",
    ) as HTMLButtonElement;
    const filterCheckbox = document.getElementById(
      "skills-filter-checkbox",
    ) as HTMLInputElement;

    const menuSkillBoxes = [
      ...document.querySelectorAll(".input-skill-box"),
    ] as HTMLInputElement[];
    const childSkillBoxes = [
      ...document.querySelectorAll(".child-skill-box"),
    ] as HTMLElement[];
    const skillFilterElements = [
      ...document.querySelectorAll(`.skill-filter-item`),
    ] as HTMLElement[];

    const toggleCheckboxes = (checked: boolean) => {
      menuSkillBoxes.forEach((checkbox) => (checkbox.checked = checked));
      filterCheckbox.dispatchEvent(new Event("change"));
    };
    checkAllBtn.addEventListener("click", () => toggleCheckboxes(true));
    uncheckAllBtn.addEventListener("click", () => toggleCheckboxes(false));

    menuSkillBoxes.forEach((checkbox) => {
      checkbox.addEventListener("change", () => {
        filterCheckbox.dispatchEvent(new Event("change"));
      });
    });

    filterCheckbox.addEventListener("change", () => {
      const elemStyle = filterCheckbox.checked ? "none" : "block";
      const skillStyle = filterCheckbox.checked ? "transparent" : "";

      skillFilterElements.forEach(
        (element) => (element.style.display = elemStyle),
      );

      childSkillBoxes.forEach((element) => {
        (element as HTMLElement).style.backgroundColor = skillStyle;
      });

      if (filterCheckbox.checked) {
        menuSkillBoxes
          .filter((checkbox) => checkbox.checked)
          .map((checkbox) => checkbox.id)
          .forEach((skillClassId: string) => {
            [...document.getElementsByClassName(skillClassId)].forEach(
              (element) => ((element as HTMLElement).style.display = "block"),
            );
            [
              ...document.getElementsByClassName("child-" + skillClassId),
            ].forEach(
              (element) =>
                ((element as HTMLElement).style.backgroundColor = ""),
            );
          });
      }
    });
  });
</script>
