---
import { Icon } from "astro-icon/components";

interface Props {
  modalId: string;
  title: string;
}

const { modalId, title }: Props = Astro.props;
---

<div
  id={modalId}
  role="dialog"
  aria-modal="true"
  tabindex="-1"
  class="modal fixed inset-0 z-50 flex hidden items-center justify-center bg-skin-muted/30"
>
  <section class="max-w-md rounded-lg bg-skin-secondary">
    <div class="flex justify-between border-b border-skin-muted">
      <h4>
        {title}
      </h4>
      <button
        type="button"
        id=`close-modal:${modalId}`
        title="Close modal"
        aria-label="Close modal"
      >
        <Icon name="mdi:close" class="size-6" />
      </button>
    </div>
    <div>
      <slot name="body" />
    </div>
    <div class="border-t border-skin-muted">
      <slot name="footer" />
    </div>
  </section>
</div>

<style>
  button {
    @apply inline-flex size-8 cursor-pointer items-center justify-center rounded-md text-skin-interactive transition-all duration-500 hover:bg-skin-interactive/20;
  }
  section > * {
    @apply p-4 md:p-5;
  }
</style>

<script>
  function openModal(modal: HTMLElement) {
    modal.classList.remove("hidden");
  }
  function closeModal(modal: HTMLElement) {
    modal.classList.add("hidden");
  }

  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".modal").forEach((value) => {
      const modal = value as HTMLElement;
      const openBtn = document.getElementById(`open-modal:${modal.id}`);
      const closeBtn = document.getElementById(`close-modal:${modal.id}`);

      openBtn?.addEventListener("click", () => openModal(modal));
      closeBtn?.addEventListener("click", () => closeModal(modal));
      modal.addEventListener("click", (event: MouseEvent) => {
        if (event.target === modal) closeModal(modal);
      });
      window.addEventListener("keydown", (event: KeyboardEvent) => {
        if (event.key === "Escape" && !modal.classList.contains("hidden"))
          closeModal(modal);
      });
    });
  });
</script>
