---
import Modal from "@/components/base/Modal.astro";
import { CV } from "@/CVMapper";
import SkillsList from "@/components/base/SkillsList.astro";
import { Icon } from "astro-icon/components";

const { skills } = CV;

const modalId = "skillsModal";

const buttons = [
  {
    ariaLabel: "Select all skills",
    text: "Select All",
    id: "skills-check-all-btn",
  },
  {
    ariaLabel: "Deselect all skills",
    text: "Deselect All",
    id: "skills-uncheck-all-btn",
  },
];
---

<button
  title="Highlight my skills"
  aria-label="Highlight my skills"
  class={Astro.props.class}
  id={`open-modal:${modalId}`}
>
  <Icon name="ri:brush-fill" class="size-5" />
</button>

<Modal
  modalId={modalId}
  title="Highlight Skills"
  buttons={buttons}
  closePrimary={true}
>
  <div class="space-y-3">
    <p>
      Highlight the skills you're interested in to emphasize them on the
      website.
    </p>
    <ul class=`space-y-3 [&>*]:space-y-2`>
      <li>
        <h4>Tools</h4>
        <SkillsList items={skills.tools || []} input={true} />
      </li>
      <li>
        <h4>Languages</h4>
        <SkillsList items={skills.languages || []} input={true} />
      </li>
      <li>
        <h4>Technologies</h4>
        <ul class="space-y-1">
          {
            skills.languages!.map((language) => {
              const tech = language.technologies;
              return tech ? (
                <li>
                  <SkillsList
                    groupBy={language.name}
                    items={tech}
                    input={true}
                  />
                </li>
              ) : null;
            })
          }
        </ul>
      </li>
    </ul>
  </div>
</Modal>

<script>
  function updateChildStyle(checkbox: HTMLInputElement) {
    const skillStyle = checkbox.checked ? "true" : "false";
    [...document.getElementsByClassName("child-" + checkbox.id)].forEach(
      (element) => element.setAttribute("data-selected", skillStyle),
    );
  }

  document.addEventListener("DOMContentLoaded", () => {
    const selectAllBtn = document.getElementById(
      "skills-check-all-btn",
    ) as HTMLButtonElement;
    const deselectAllBtn = document.getElementById(
      "skills-uncheck-all-btn",
    ) as HTMLButtonElement;
    const modalSkillBoxes = [
      ...document.getElementsByClassName("input-skill-box"),
    ] as HTMLInputElement[];
    const selectedChilds = [
      ...document.getElementsByClassName("dynamic-child"),
    ] as HTMLElement[];

    const toggleCheckboxes = (checked: boolean) => {
      modalSkillBoxes.forEach((checkbox) => (checkbox.checked = checked));
      selectedChilds.forEach((element) => {
        element.setAttribute("data-selected", checked ? "true" : "false");
      });
    };
    selectAllBtn.addEventListener("click", () => toggleCheckboxes(true));
    deselectAllBtn.addEventListener("click", () => toggleCheckboxes(false));
    modalSkillBoxes.forEach((checkbox) => {
      updateChildStyle(checkbox);
      checkbox.addEventListener("change", () => {
        updateChildStyle(checkbox);
      });
    });
  });
</script>
