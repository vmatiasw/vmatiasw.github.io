---
import { Icon } from "astro-icon/components";
---

<button
  id="themeSwitch"
  class=`${Astro.props.class} group/theme`
  title="Change theme"
  aria-label="Change theme"
>
  <i class="transition-transform group-hover/theme:rotate-45">
    <Icon name="ri:moon-fill" class="hidden size-5 dark:block" />
    <Icon name="ri:sun-fill" class="size-5 dark:hidden" />
  </i>
</button>
<div id="themeStatus" aria-live="polite" class="sr-only"></div>

<style>
  :global(.dark) {
    color-scheme: dark;
  }
</style>

<script>
  const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches
    ? "dark"
    : "light";
  const themeSwitchBtn = document.getElementById(
    "themeSwitch",
  ) as HTMLButtonElement;
  const isAppearanceTransition =
    "startViewTransition" in document &&
    !window.matchMedia("(prefers-reduced-motion: reduce)").matches;

  const InitialTheme = localStorage.getItem("theme") || systemTheme;
  document.documentElement.classList.add(InitialTheme);
  localStorage.setItem("theme", InitialTheme);
  let isDark: boolean = InitialTheme === "dark";

  function switchTheme() {
    isDark = !isDark;
    document.documentElement.classList.toggle("dark", isDark);
    localStorage.setItem("theme", isDark ? "dark" : "light");
    const themeStatus = document.getElementById("themeStatus");
    themeStatus!.textContent = isDark ? "Dark theme activated" : "Light theme activated";
  }

  function toggleDark() {
    if (!isAppearanceTransition) {
      switchTheme();
      return;
    }

    const { left, right, top, bottom } = themeSwitchBtn.getBoundingClientRect();
    const x = (left + right) / 2;
    const y = (top + bottom) / 2;
    const endRadius = Math.hypot(
      Math.max(x, innerWidth - x),
      Math.max(y, innerHeight - y),
    );

    const transition = document.startViewTransition(async () => {
      switchTheme();
    });
    transition.ready.then(() => {
      const clipPath = [
        `circle(0px at ${x}px ${y}px)`,
        `circle(${endRadius}px at ${x}px ${y}px)`,
      ];
      document.documentElement.animate(
        {
          clipPath: isDark ? [...clipPath].reverse() : clipPath,
        },
        {
          duration: 400,
          easing: "ease-out",
          pseudoElement: isDark
            ? "::view-transition-old(root)"
            : "::view-transition-new(root)",
        },
      );
    });
  }

  themeSwitchBtn.addEventListener("click", toggleDark);

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      if (!("theme" in localStorage)) {
        isDark = e.matches;
        switchTheme();
      }
    });
</script>
